/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ERGASIA_H_RPCGEN
#define _ERGASIA_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct vector_in {
	struct {
		u_int y_len;
		int *y_val;
	} y;
	float a;
};
typedef struct vector_in vector_in;

struct minmax {
	struct {
		u_int mima_len;
		int *mima_val;
	} mima;
};
typedef struct minmax minmax;

struct product {
	struct {
		u_int prod_len;
		float *prod_val;
	} prod;
};
typedef struct product product;

#define ERGASIA_PROG 0x23451111
#define ERGASIA_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define AVERAGE_Y 1
extern  float * average_y_1(vector_in *, CLIENT *);
extern  float * average_y_1_svc(vector_in *, struct svc_req *);
#define MIN_MAX_Y 2
extern  minmax * min_max_y_1(vector_in *, CLIENT *);
extern  minmax * min_max_y_1_svc(vector_in *, struct svc_req *);
#define PRODUCT_Y 3
extern  product * product_y_1(vector_in *, CLIENT *);
extern  product * product_y_1_svc(vector_in *, struct svc_req *);
extern int ergasia_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define AVERAGE_Y 1
extern  float * average_y_1();
extern  float * average_y_1_svc();
#define MIN_MAX_Y 2
extern  minmax * min_max_y_1();
extern  minmax * min_max_y_1_svc();
#define PRODUCT_Y 3
extern  product * product_y_1();
extern  product * product_y_1_svc();
extern int ergasia_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_vector_in (XDR *, vector_in*);
extern  bool_t xdr_minmax (XDR *, minmax*);
extern  bool_t xdr_product (XDR *, product*);

#else /* K&R C */
extern bool_t xdr_vector_in ();
extern bool_t xdr_minmax ();
extern bool_t xdr_product ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ERGASIA_H_RPCGEN */
